Routes:
/login
/bits
/pers

-ACCOUNTS-

/login
.get
-takes nothing
- returns login.ejs

.post
- takes password/username,
    -verifies and sets up session?
- returns bits.ejs

/login/create
.get
-takes nothing
- returns/redirect createAccount.ejs

.post
- takes password/username
  -creates account
- returns/redirect bits.ejs


-BITS-

/bits
.get
-takes nothing/session
- returns bits.ejs


/bits/:id
.get
-takes id
- returns individual bit reviewBit.ejs

.put
-takes id and JSON body with any fields that have been edited
-returns/redirect reviewBit.ejs


/bits/:id/label
.post
-takes id for bit and body id for label
-returns yes/no

.delete
-takes bit id and label id for body
-deletes entry for label in join table (jokes_labels)
-returns yes/no

/bits/new
.get
-takes nothing
-returns newBit.ejs

.post
-takes json body with keys:
{title: string,  body:string, tags:[], labels:[]}
  - posts new bit
-returns bits.ejs



/bits/label
.post
-takes string of label name
-adds label to list of labels
-returns array of current labels

.delete
- takes label id
-deletes label from list of labels
-returns array of current labels


/bits/search/:id
.get
-takes string as url id
- returns results as JSON array {title: string,  body:string, tags:[], labels:[]}


-PERFORMANCES-

/pers
.get
-takes nothing
- returns pers.ejs

/pers/:id
.get
-takes id of performance
- returns reviewPer.ejs

.put
-takes JSON  object of updated fields
{user_id: integer, per_title: string, location: string, given_time: time(seconds), per_time: integer, audio: string, rating: integer, date: timeStamp}
- returns reviewPer.ejs


/pers/new
.get
-takes nothing
-returns newPer.EJS


.post - posts data in the body as new performance,
-takes
{user_id: integer, per_title: string, location: string, given_time: time(seconds), per_time: integer, audio: string, rating: integer, date: timeStamp}
-returns reviewPer.ejs


/pers/live
.post
-sending info to livePer.ejs
